# Cursor Rules - Projeto Vilanova

Voc√™ est√° trabalhando no **Projeto Vilanova**, um acervo digital de repente nordestino (cantoria de viola).

## üéØ Miss√£o do Projeto

Preservar digitalmente a cantoria nordestina atrav√©s de:
- Transcri√ß√£o autom√°tica de v√≠deos/√°udios
- Cataloga√ß√£o estruturada de repentes
- An√°lise de m√©tricas e rimas
- Documenta√ß√£o de cantadores e estilos

---

## üìä Estrutura de Dados (MUITO IMPORTANTE!)

O projeto usa **arquitetura modular** otimizada para edi√ß√£o por IA:

```
public/data/
‚îú‚îÄ‚îÄ index.json              # √çndice leve (5 KB)
‚îú‚îÄ‚îÄ estilos.json            # Cat√°logo de estilos (10 KB)
‚îî‚îÄ‚îÄ cantorias/              # üìÅ Arquivos individuais (2-8 KB cada)
    ‚îú‚îÄ‚îÄ pensamento-positivo-os-nonatos.json
    ‚îú‚îÄ‚îÄ oitavas-os-nonatos-sao-lourenco.json
    ‚îî‚îÄ‚îÄ ... (13 arquivos no total)
```

### Por Que Arquivos Separados?

- ‚úÖ **F√°cil para voc√™ (IA)** - Arquivos pequenos cabem melhor no contexto
- ‚úÖ **Edi√ß√£o precisa** - Escopo reduzido evita erros
- ‚úÖ **Git-friendly** - Mudan√ßas isoladas
- ‚úÖ **Performance** - Carrega s√≥ o necess√°rio

---

## üéµ Como Adicionar uma Nova Cantoria

Quando o usu√°rio pedir para adicionar uma cantoria (geralmente com link do YouTube + transcri√ß√£o), siga estes passos:

### 1. Crie o arquivo individual

**Arquivo:** `public/data/cantorias/{id}.json`

**Template:**
```json
{
  "id": "nome-cantoria-slug",
  "slug": "url-amigavel-slug",
  "titulo": "T√≠tulo da Cantoria",
  "estilo": {
    "nome": "Martelo Alagoano",
    "slug": "martelo-alagoano",
    "versos_por_estrofe": 10,
    "metrica": "decass√≠labos (10 s√≠labas)",
    "esquema_rima": "AAAAAAAAAB + mote triplo",
    "mote_fixo": "Nos dez p√©s de martelo Alagoano (3x)"
  },
  "cantadores": [
    {
      "nome": "Nome do Cantador",
      "slug": "cantador-slug",
      "dupla": "Nome da Dupla (se houver)"
    }
  ],
  "local": null,
  "ano": null,
  "duracao": "5:07",
  "contexto": "Descri√ß√£o breve do tema/contexto",
  "estrofes": [
    {
      "numero": 1,
      "cantador": "Nome do Cantador",
      "versos": [
        "Primeiro verso da estrofe",
        "Segundo verso da estrofe",
        "... (total depende do estilo)"
      ],
      "tema": "Tema abordado nesta estrofe"
    }
  ],
  "links": {
    "youtube": "https://www.youtube.com/watch?v=...",
    "spotify": null
  },
  "transcricao_path": "/repentes/nome-arquivo.txt",
  "audio_path": null,
  "destaque": true,
  "_metadata": {
    "created_at": "2025-01-17",
    "file_ref": "/cantorias/nome-cantoria-slug.json",
    "source": "Projeto Vilanova"
  }
}
```

### 2. Atualize o √≠ndice

**Arquivo:** `public/data/index.json`

Adicione no array `cantorias`:

```json
{
  "id": "nome-cantoria-slug",
  "slug": "url-amigavel-slug",
  "titulo": "T√≠tulo da Cantoria",
  "estilo": "Martelo Alagoano",
  "destaque": true,
  "youtube": "https://www.youtube.com/watch?v=...",
  "_ref": "/cantorias/nome-cantoria-slug.json"
}
```

### 3. Atualize os metadados

Em `public/data/index.json` ‚Üí `metadata`:

```json
"metadata": {
  "ultima_atualizacao": "2025-01-17",  // ‚Üê Data atual
  "total_repentes": 14,                // ‚Üê Incrementar
  "total_estrofes_catalogadas": 65     // ‚Üê Somar estrofes novas
}
```

### 4. (Opcional) Crie transcri√ß√£o completa

**Arquivo:** `repentes/{id}.txt`

Formato livre com an√°lise detalhada das estrofes.

### 5. Sincronize para dist/

```bash
npm run data:sync
```

---

## üìñ Estilos de Repente (Refer√™ncia R√°pida)

### Principais Estilos

1. **Sextilha**
   - 6 versos setiss√≠labos (7 s√≠labas)
   - Esquema: AABCCB
   - Mais comum e vers√°til

2. **Oitava**
   - 8 versos setiss√≠labos (7 s√≠labas)
   - Esquema: ABBAACCA
   - Popular em competi√ß√µes

3. **Martelo Alagoano**
   - 10 versos decass√≠labos (10 s√≠labas)
   - Esquema: AAAAAAAAAB + mote triplo
   - Mote: "Nos dez p√©s de martelo Alagoano" (3x)
   - Muito dif√≠cil!

4. **Galope √† Beira Mar**
   - 10 versos decass√≠labos (10 s√≠labas)
   - Esquema: AAAAABBCCM
   - Mote: "Nos dez de galope na/da beira do mar"

5. **D√©cima (Mote Fixo)**
   - 10 versos decass√≠labos (10 s√≠labas)
   - Esquema: ABBAACCDDC
   - Mote fixo de 2 versos

6. **Desafio (Mote em Decass√≠labos)**
   - 10 versos decass√≠labos (10 s√≠labas)
   - Esquema: AAAAAAAABC (mote fixo BC)
   - Usado em pelejas

**Consulte:** `public/data/estilos.json` e `/estilos/*.md` para detalhes completos.

---

## üé® Padr√µes de C√≥digo

### Imports

```typescript
// ‚úÖ CORRETO - Use acervoCompat
import acervoData from "../lib/acervoCompat";

// ‚ùå ERRADO - N√£o importe acervo.json diretamente
import acervoData from "../../../public/data/acervo.json";
```

### Navega√ß√£o

```typescript
// ‚úÖ CORRETO - Use TanStack Router Link
<Link to="/cantorias/$slug" params={{ slug: "cantoria-slug" }}>

// ‚ùå ERRADO - N√£o use <a> para rotas internas
<a href="/cantorias/cantoria-slug">
```

### Hooks RPC

```typescript
// ‚úÖ CORRETO - Use TanStack Query hooks
const { data } = useMyTool({ param: "value" });

// ‚ùå ERRADO - N√£o chame client.TOOL() diretamente em componentes
const data = await client.MY_TOOL({ param: "value" });
```

---

## üîç Localiza√ß√£o de Arquivos

### Componentes React
```
view/src/
‚îú‚îÄ‚îÄ routes/           # P√°ginas (TanStack Router)
‚îú‚îÄ‚îÄ components/       # Componentes reutiliz√°veis
‚îú‚îÄ‚îÄ lib/              # Utilit√°rios
‚îî‚îÄ‚îÄ hooks/            # Custom hooks
```

### Dados
```
public/data/
‚îú‚îÄ‚îÄ index.json        # SEMPRE atualize ao adicionar cantoria
‚îú‚îÄ‚îÄ estilos.json      # Raramente muda
‚îî‚îÄ‚îÄ cantorias/        # Adicione arquivos individuais aqui
```

### Transcri√ß√µes
```
repentes/             # Arquivos .txt com transcri√ß√µes completas
```

---

## üö® Regras Importantes

### Ao Adicionar Cantoria

1. ‚úÖ **SEMPRE** crie arquivo individual em `cantorias/`
2. ‚úÖ **SEMPRE** atualize `index.json` (array + metadata)
3. ‚úÖ **SEMPRE** use ID √∫nico (kebab-case)
4. ‚úÖ **SEMPRE** incremente `total_repentes` e `total_estrofes_catalogadas`
5. ‚úÖ **SEMPRE** atualize `ultima_atualizacao` com data atual
6. ‚úÖ **NUNCA** edite `acervo.json` (n√£o existe mais!)
7. ‚úÖ **NUNCA** edite arquivos em `dist/` (gerados automaticamente)

### Ao Editar Cantoria

1. ‚úÖ Edite apenas o arquivo individual em `cantorias/{id}.json`
2. ‚úÖ Se mudar n√∫mero de estrofes, atualize `total_estrofes_catalogadas` no `index.json`
3. ‚úÖ Mantenha consist√™ncia entre `index.json` e arquivo individual

### Valida√ß√£o

Ap√≥s qualquer mudan√ßa:

```bash
# Verificar JSON v√°lido
jq . public/data/index.json > /dev/null && echo "‚úÖ V√°lido"

# Contar cantorias
jq '.cantorias | length' public/data/index.json

# Sincronizar para dist
npm run data:sync
```

---

## üìö Refer√™ncias Importantes

- **Data Model:** `DATA-MODEL.md`
- **Estilos de Repente:** `/estilos/*.md`
- **Contribui√ß√£o:** `README.md`
- **Refatora√ß√£o:** `SUMMARY-REFATORACAO.md`

---

## üéØ Comportamento Esperado

### Quando usu√°rio pede "Adicione esta cantoria..."

1. **Analise** a transcri√ß√£o fornecida
2. **Identifique** o estilo (m√©trica + esquema de rima)
3. **Crie** arquivo em `cantorias/{id}.json`
4. **Adicione** entrada no `index.json`
5. **Atualize** metadata (totals + data)
6. **Crie** transcri√ß√£o em `repentes/{id}.txt`
7. **Confirme** que tudo foi adicionado

### Quando usu√°rio pede "Corrija esta cantoria..."

1. **Localize** arquivo em `cantorias/{id}.json`
2. **Edite** apenas esse arquivo
3. **Atualize** `index.json` se necess√°rio
4. **Recalcule** metadata se mudou n√∫mero de estrofes

---

## üí° Dicas para Performance

- Use `index.json` para listar/filtrar (leve)
- Carregue arquivo individual s√≥ quando necess√°rio
- N√£o carregue todos os 13 arquivos de uma vez se n√£o precisar
- `acervoCompat.ts` j√° agrega tudo (use para retrocompatibilidade)

---

## ‚úÖ Checklist de Qualidade

Ao adicionar cantoria, verifique:

- [ ] ID √∫nico (sem conflitos)
- [ ] Slug amig√°vel (kebab-case, sem acentos)
- [ ] Estilo correto (nome + esquema de rima)
- [ ] Cantadores com nomes consistentes
- [ ] Versos estruturados corretamente
- [ ] Contagem de s√≠labas validada
- [ ] Link YouTube v√°lido
- [ ] Entrada em index.json criada
- [ ] Metadata atualizado (total_repentes, total_estrofes, data)
- [ ] JSON v√°lido (sem erros de sintaxe)

---

**Lembre-se:** Arquivos pequenos = IA feliz! Sempre prefira editar arquivos individuais. üéØ

